{"version":3,"sources":["components/PersonElement.js","components/Personlist.js","components/SearchElement.js","components/AddPerson.js","services/Persons.js","components/Notification.js","components/App.js","index.js"],"names":["PersonElement","_ref","person","removePerson","react_default","a","createElement","name","phone","onClick","PersonList","persons","map","components_PersonElement","key","id","SearchElement","searchTerm","handleSearchChange","value","onChange","AddPerson","saveForm","newName","handleNameChange","newPhone","handlePhoneChange","onSubmit","type","baseUrl","Persons","console","log","axios","get","then","response","data","concat","post","put","personId","delete","Notification","message","messageType","className","App","_useState","useState","_useState2","Object","slicedToArray","setNewName","_useState3","_useState4","setNewPhone","_useState5","_useState6","setPersons","_useState7","_useState8","setSearchTerm","_useState9","_useState10","_useState10$","setMessage","searchList","length","filter","toLocaleLowerCase","includes","useEffect","personsService","returnedPersons","updatePerson","foundPerson","updatedPerson","objectSpread","responsePerson","catch","error","createPerson","messagesTimeOut","setTimeout","components_Notification","components_SearchElement","event","target","components_AddPerson","preventDefault","find","alert","window","confirm","Personlist","reponse","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.672f42bb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonElement = ({ person, removePerson }) => (\r\n    <tr>\r\n        <td>{person.name}</td>\r\n        <td>{person.phone}</td>\r\n        <td>\r\n            <button onClick={removePerson}>Poista</button>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default PersonElement","import React from 'react'\r\nimport PersonElement from './PersonElement'\r\n\r\n\r\nconst PersonList = ({persons, removePerson}) => {\r\n    \r\n    const personElements = () => persons.map(person => {\r\n        return (\r\n            <PersonElement key={person.id} person={person} removePerson={() => removePerson(person.id)} />\r\n        )\r\n    })\r\n    \r\n    return (\r\n    <div>\r\n        <h2>Numerot</h2>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        Nimi\r\n                        </td>\r\n                    <td>\r\n                        Puh\r\n                        </td>\r\n                </tr>\r\n                {personElements()}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PersonList","import React from 'react'\r\n\r\nconst SearchElement = ({ searchTerm, handleSearchChange }) => (\r\n    <div>\r\n        Haku: <input value={searchTerm} onChange={handleSearchChange} />\r\n    </div>\r\n)\r\n\r\nexport default SearchElement","import React from 'react'\r\n\r\nconst AddPerson = ({saveForm, newName, handleNameChange, newPhone, handlePhoneChange}) => (\r\n    <div>\r\n    <h2>Lis채채 uusi</h2>\r\n            <form onSubmit={saveForm}>\r\n                <div>\r\n                    Nimi: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>\r\n                    Puh: <input value={newPhone} onChange={handlePhoneChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">lis채채</button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n)\r\n\r\nexport default AddPerson","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    console.log('get all persons')\r\n    \r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getOne = () => { console.log('get  Person') }\r\n\r\nconst create = ( name, phone ) => {\r\n    console.log(`add person ${name} ${phone}`)\r\n\r\n    const request = axios.post(baseUrl, {name, phone})\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (person) => {\r\n    console.log(`update person ${person}`)\r\n\r\n    const request = axios.put(`${baseUrl}/${person.id}`, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (personId) => {\r\n    console.log(`remove Person ${personId}`)\r\n\r\n    return axios.delete(`${baseUrl}/${personId}`)\r\n}\r\n\r\n\r\nexport default { getAll, getOne, create, update, remove }","import React from 'react'\r\nconst Notification = ({ message, messageType }) => {\r\n  \r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={messageType}>\r\n      {message}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport PersonList from './Personlist';\r\nimport SearchElement from './SearchElement';\r\nimport AddPerson from './AddPerson';\r\nimport personsService from '../services/Persons'\r\nimport Notification from './Notification'\r\n\r\nconst App = () => {\r\n    const [newName, setNewName] = useState('')\r\n    const [newPhone, setNewPhone] = useState('')\r\n    const [persons, setPersons] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [{ message, messageType }, setMessage] = useState({ message: null, messageType: null })\r\n\r\n    const searchList = (searchTerm.length > 0) ? persons.filter(person =>\r\n        person.name.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n    ) : persons\r\n\r\n    useEffect(() => {\r\n        personsService.getAll().then(returnedPersons =>\r\n            setPersons(returnedPersons))\r\n    }, [])\r\n\r\n    const saveForm = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (newName.length === 0 || newPhone.length === 0) {\r\n            alert(\"T채yt채 molemmat kent채t\")\r\n            return\r\n        }\r\n\r\n        if (persons.find(person => person.phone === newPhone)) {\r\n            alert(`${newPhone} on jo k채yt철ss채`)\r\n            return\r\n        }\r\n\r\n        const foundPerson = persons.find(person => person.name === newName)\r\n\r\n        if (foundPerson) {\r\n            const confirm = window.confirm(`${newName} on jo luettelossa, korvataanko numero uudella?`)\r\n            if (!confirm) { return }\r\n\r\n            updatePerson(foundPerson)\r\n        } else {\r\n            createPerson()\r\n        }\r\n\r\n        setNewName('')\r\n        setNewPhone('')\r\n        setSearchTerm('')\r\n        messagesTimeOut()\r\n    }\r\n\r\n    const updatePerson = (foundPerson) => {\r\n        const updatedPerson = { ...foundPerson, phone: newPhone }\r\n\r\n        personsService.update(updatedPerson).then(responsePerson => {\r\n            setPersons(persons.map(person => responsePerson.id !== person.id ? person : responsePerson))\r\n            setMessage({ message: `Henkil철n ${responsePerson.name} numero p채ivitetty: ${responsePerson.phone}!`, messageType: 'success' })\r\n        }).catch(error => {\r\n            setPersons(persons.filter(person => person.id !== foundPerson.id))\r\n            setMessage({ message: `Henkil철 ${foundPerson.name} oli jo poistettu palvelimelta`, messageType: 'error' })\r\n        })\r\n    }\r\n\r\n    const createPerson = () => {\r\n        personsService.create(newName, newPhone).then(responsePerson => {\r\n            setPersons(persons.concat(responsePerson))\r\n            setMessage({ message: `Henkil철 ${newName} lis채tty!`, messageType: 'success' })\r\n        }).catch(error => {\r\n            setMessage({ message: error.response.data.error, messageType: 'error' })\r\n        })\r\n    }\r\n\r\n    const removePerson = (personId) => {\r\n        const foundPerson = persons.find(person => person.id === personId)\r\n        const confirm = window.confirm(`Poistetaanko ${foundPerson.name}`)\r\n        if (!confirm) { return }\r\n\r\n        personsService.remove(personId).then(reponse => {\r\n            setPersons(persons.filter(person => person.id !== personId))\r\n            setMessage({ message: `Henkil철 ${foundPerson.name} poistettu!`, messageType: 'success' })\r\n        }).catch(error => {\r\n            setPersons(persons.filter(person => person.id !== personId))\r\n            setMessage({ message: `Henkil철 ${foundPerson.name} oli jo poistettu palvelimelta`, messageType: 'error' })\r\n        })\r\n        messagesTimeOut()\r\n    }\r\n\r\n    const messagesTimeOut = () => (\r\n        setTimeout(() => {\r\n            setMessage({ message: null, messageType: null })\r\n        }, 5000)\r\n    )\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handlePhoneChange = (event) => {\r\n        setNewPhone(event.target.value)\r\n    }\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearchTerm(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Puhelinluettelo</h2>\r\n            <Notification message={message} messageType={messageType} />\r\n            <SearchElement searchTerm={searchTerm} handleSearchChange={handleSearchChange} />\r\n            <AddPerson saveForm={saveForm} newName={newName} handleNameChange={handleNameChange}\r\n                newPhone={newPhone} handlePhoneChange={handlePhoneChange} />\r\n            <PersonList persons={searchList} removePerson={removePerson} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}